{"version":3,"sources":["SeasonDisplay.js","Loading.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loading","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"gNAGMA,EAAe,CACjBC,OAAS,CACLC,KAAO,sBACPC,SAAW,OAEfC,OAAS,CACLF,KAAO,qBACPC,SAAW,cA0BJE,EAdM,SAACC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAQhC,EAAyBP,EAAaS,GAA/BP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SACb,OACI,sBAAKS,UAAS,yBAAqBH,GAAnC,UACA,mBAAGG,UAAS,4BAA0BT,EAA1B,WACb,mCAAOD,EAAP,OACA,mBAAGU,UAAS,6BAA0BT,EAA1B,eC7BbU,EAAU,SAACP,GACb,OACF,qBAAKM,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,SAAqCN,EAAMQ,aAK/CD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCTTG,E,4MASHC,MAAQ,CAAEV,IAAM,KAAMW,aAAe,I,uDAEpC,WAAqB,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAMgB,EAASE,OAAOC,cAClD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAeS,EAAIb,e,2BAIlD,WACI,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,0CAAcqB,KAAKX,MAAMC,iBAE/BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAChC,cAAC,EAAD,CAAeA,IAAOqB,KAAKX,MAAMV,MAGjC,cAAC,EAAD,CAASO,QAAQ,qC,oBAIjC,WACK,OACA,qBAAKF,UAAU,aAAf,SACKgB,KAAKC,sB,GAjCAC,IAAMC,WAwCxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.60c4f843.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer : {\r\n        text : \"Let's hit the beach\",\r\n        iconName : 'sun'\r\n    },\r\n    winter : {\r\n        text : \"Burr, it is chilly\",\r\n        iconName : 'snowflake'\r\n    }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    } else {\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n}\r\n\r\nconst SeasonDisplay= (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    //const seasonName = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\r\n    //const icon = season === 'winter' ? 'snowflake' : 'sun';\r\n    const {text, iconName} = seasonConfig[season];\r\n    return (\r\n        <div className= {`season-display ${season}`}>\r\n        <i className = {`icon-left massive ${ iconName} icon`} />\r\n       <h1> { text } </h1>\r\n       <i className = {`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay; ","import React from 'react';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n  <div className=\"ui active dimmer\">\r\n    <div className=\"ui big text loader\">{props.message}</div>\r\n</div>\r\n    );\r\n};\r\n\r\nLoading.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Loading from './Loading';\r\n\r\nclass App extends React.Component {\r\n   // constructor(props) {\r\n       // super(props);\r\n\r\n        //this.state = { lat : null, errorMessage : '' };\r\n    \r\n    \r\n  \r\n   // };\r\n   state = { lat : null, errorMessage : '' };\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat : position.coords.latitude }),\r\n            err => this.setState({ errorMessage : err.message })\r\n            );\r\n    }\r\n\r\n    renderContent() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <div>Error: { this.state.errorMessage }</div>;\r\n        }\r\n        if (!this.state.errorMessage && this.state.lat) {\r\n            return <SeasonDisplay lat ={ this.state.lat} />;\r\n        }\r\n        else {\r\n            return <Loading message=\"Please accept location request\"/>;\r\n        }\r\n    }\r\n    \r\n   render() {\r\n        return (\r\n        <div className=\"border red\">\r\n            {this.renderContent()}\r\n        </div>\r\n        )\r\n   \r\n    };\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}